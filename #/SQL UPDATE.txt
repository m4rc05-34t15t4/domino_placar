-- 04/06/2025

DROP VIEW IF EXISTS public.vw_comparacao_rivais_sinuca;
CREATE OR REPLACE VIEW public.vw_comparacao_rivais_sinuca AS
WITH confrontos AS (
    SELECT 
        LEAST(p.jogador1_id, p.jogador2_id) AS jogador1_id,
        GREATEST(p.jogador1_id, p.jogador2_id) AS jogador2_id,
        j.id AS jogador_id,
        (LEAST(p.jogador1_id, p.jogador2_id)::text || ',' || GREATEST(p.jogador1_id, p.jogador2_id)::text) AS id_rival,
        CASE
            WHEN p.jogador1_id < p.jogador2_id THEN j1.nome || ',' || j2.nome
            ELSE j2.nome || ',' || j1.nome
        END AS nome_rival,
        CASE WHEN j.id = p.jogador1_id AND p.vencedor = 'A' THEN 1
             WHEN j.id = p.jogador2_id AND p.vencedor = 'B' THEN 1
             ELSE 0
        END AS vitoria,
        CASE WHEN p.vencedor = 'AB' THEN 1 ELSE 0 END AS empate,
        CASE WHEN j.id = p.jogador1_id AND p.vencedor = 'A' THEN p.placar1
             WHEN j.id = p.jogador2_id AND p.vencedor = 'B' THEN p.placar2
             ELSE 0
        END AS placar_pro,
        CASE WHEN j.id = p.jogador1_id AND p.vencedor = 'B' THEN p.placar1
             WHEN j.id = p.jogador2_id AND p.vencedor = 'A' THEN p.placar2
             ELSE 0
        END AS placar_contra,
        CASE
            WHEN p.jogadorbct IS NOT NULL AND (p.jogadorbct = 1 AND j.id = p.jogador1_id OR p.jogadorbct = 2 AND j.id = p.jogador2_id)
            THEN 1 ELSE 0
        END AS merda,
        CASE
            WHEN p.vencedor = 'A' AND p.placar2 = 0 AND j.id = p.jogador1_id THEN 1
            WHEN p.vencedor = 'B' AND p.placar1 = 0 AND j.id = p.jogador2_id THEN 1
            ELSE 0
        END AS merito
    FROM vw_partida_sinuca_com_vencedor p
    JOIN jogador j1 ON j1.id = p.jogador1_id
    JOIN jogador j2 ON j2.id = p.jogador2_id
    JOIN jogador j ON j.id IN (p.jogador1_id, p.jogador2_id)
),
agregado_por_jogador AS (
    SELECT 
        id_rival,
        nome_rival,
        jogador_id,
        SUM(vitoria) AS vitoria,
        SUM(placar_pro) AS placar_vitoria,
        SUM(placar_contra) AS placar_derrota,
        SUM(merda) AS merda,
        SUM(merito) AS merito,
        SUM(empate) AS empate
    FROM confrontos
    GROUP BY id_rival, nome_rival, jogador_id
),
contagem_partidas AS (
    SELECT 
        LEAST(jogador1_id, jogador2_id)::text || ',' || GREATEST(jogador1_id, jogador2_id)::text AS id_rival,
        COUNT(*) AS partidas
    FROM vw_partida_sinuca_com_vencedor
    GROUP BY LEAST(jogador1_id, jogador2_id), GREATEST(jogador1_id, jogador2_id)
),
agregado_final AS (
    SELECT 
        a.id_rival,
        a.nome_rival,
        STRING_AGG(a.vitoria::text, ',' ORDER BY a.jogador_id) AS vitorias,
        STRING_AGG(a.placar_vitoria::text, ',' ORDER BY a.jogador_id) AS placar_vitoria,
        STRING_AGG(a.placar_derrota::text, ',' ORDER BY a.jogador_id) AS placar_derrota,
        STRING_AGG(a.merda::text, ',' ORDER BY a.jogador_id) AS merdas,
        STRING_AGG(a.merito::text, ',' ORDER BY a.jogador_id) AS meritos,
        (SUM(a.empate))::int AS empates,
        p.partidas
    FROM agregado_por_jogador a
    JOIN contagem_partidas p ON p.id_rival = a.id_rival
    GROUP BY a.id_rival, a.nome_rival, p.partidas
)
SELECT * FROM agregado_final
ORDER BY partidas DESC;





-- 01/06/2025

CREATE OR REPLACE VIEW public.vw_partida_sinuca_com_vencedor
 AS
 SELECT partida_sinuca.id,
    partida_sinuca.data_hora,
    partida_sinuca.jogador1_id,
    partida_sinuca.jogador2_id,
    partida_sinuca.placar1,
    partida_sinuca.placar2,
    partida_sinuca.jogadorbct,
        CASE
            WHEN partida_sinuca.jogadorbct IS NOT NULL THEN
            CASE
                WHEN partida_sinuca.jogadorbct = ANY (ARRAY[1]) THEN 'B'::text
                WHEN partida_sinuca.jogadorbct = ANY (ARRAY[2]) THEN 'A'::text
                WHEN partida_sinuca.placar1 > partida_sinuca.placar2 THEN 'A'::text
                WHEN partida_sinuca.placar2 > partida_sinuca.placar1 THEN 'B'::text
                ELSE 'AB'::text
            END
            ELSE
            CASE
                WHEN partida_sinuca.placar1 > partida_sinuca.placar2 THEN 'A'::text
                WHEN partida_sinuca.placar2 > partida_sinuca.placar1 THEN 'B'::text
                ELSE 'AB'::text
            END
        END AS vencedor
   FROM partida_sinuca;





CREATE OR REPLACE VIEW public.vw_jogador_estatistica_sinuca
 AS
 SELECT j.id,
    j.nome,
    count(p.id) AS partidas_sinuca,
    sum(
        CASE
            WHEN j.id = p.jogador1_id AND p.vencedor = 'A'::text THEN 1
            WHEN j.id = p.jogador2_id AND p.vencedor = 'B'::text THEN 1
            ELSE 0
        END) AS vitorias,
    sum(
        CASE
            WHEN j.id = p.jogador1_id AND p.vencedor = 'B'::text THEN 1
            WHEN j.id = p.jogador2_id AND p.vencedor = 'A'::text THEN 1
            ELSE 0
        END) AS derrotas,
    sum(
        CASE
            WHEN (j.id = p.jogador1_id OR j.id = p.jogador2_id) AND p.vencedor = 'AB'::text THEN 1
            ELSE 0
        END) AS empates,
    sum(
        CASE
            WHEN p.jogadorbct IS NOT NULL AND (p.jogadorbct = 1 AND j.id = p.jogador1_id OR p.jogadorbct = 2 AND j.id = p.jogador2_id ) THEN 1
            ELSE 0
        END) AS merda,
    sum(
        CASE
            WHEN (p.vencedor = 'A'::text AND p.placar2 = 0 AND p.jogador1_id = j.id) OR (p.vencedor = 'B'::text AND p.placar1 = 0 AND p.jogador2_id = j.id) THEN 1
            ELSE 0
        END) AS merito,
    sum(
        CASE
            WHEN j.id = p.jogador1_id AND p.vencedor = 'A'::text THEN p.placar1
            WHEN j.id = p.jogador2_id AND p.vencedor = 'B'::text THEN p.placar2
            ELSE 0
        END) AS placar_vitoria,
    sum(
        CASE
            WHEN j.id = p.jogador1_id AND p.vencedor = 'B'::text THEN p.placar1
            WHEN j.id = p.jogador2_id AND p.vencedor = 'A'::text THEN p.placar2
            ELSE 0
        END) AS placar_derrota
   FROM jogador j
     LEFT JOIN vw_partida_sinuca_com_vencedor p ON j.id = p.jogador1_id OR j.id = p.jogador2_id 
  GROUP BY j.id, j.nome
  ORDER BY (count(p.id)) DESC;


DROP VIEW IF EXISTS public.vw_comparacao_rivais_sinuca;
CREATE OR REPLACE VIEW public.vw_comparacao_rivais_sinuca AS
WITH confrontos AS (
    SELECT 
        LEAST(p.jogador1_id, p.jogador2_id) AS jogador1_id,
        GREATEST(p.jogador1_id, p.jogador2_id) AS jogador2_id,
        j.id AS jogador_id,
        j.nome AS nome_jogador,
        (LEAST(p.jogador1_id, p.jogador2_id))::text || ',' || (GREATEST(p.jogador1_id, p.jogador2_id))::text AS id_rival,
        CASE 
            WHEN p.jogador1_id < p.jogador2_id THEN j1.nome || ',' || j2.nome
            ELSE j2.nome || ',' || j1.nome
        END AS nome_rival,

        CASE 
            WHEN j.id = p.jogador1_id AND p.vencedor = 'A' THEN 1
            WHEN j.id = p.jogador2_id AND p.vencedor = 'B' THEN 1
            ELSE 0
        END AS vitoria,

        CASE 
            WHEN p.vencedor = 'AB' THEN 1 ELSE 0
        END AS empate,

        -- Novo: placar_pro só se venceu
        CASE 
            WHEN j.id = p.jogador1_id AND p.vencedor = 'A' THEN p.placar1
            WHEN j.id = p.jogador2_id AND p.vencedor = 'B' THEN p.placar2
            ELSE 0
        END AS placar_pro,

        -- Já corrigido antes: placar_contra só se perdeu
        CASE 
            WHEN j.id = p.jogador1_id AND p.vencedor = 'B' THEN p.placar1
            WHEN j.id = p.jogador2_id AND p.vencedor = 'A' THEN p.placar2
            ELSE 0
        END AS placar_contra,

        CASE 
            WHEN p.jogadorbct IS NOT NULL AND ((p.jogadorbct = 1 AND j.id = p.jogador1_id) OR (p.jogadorbct = 2 AND j.id = p.jogador2_id)) THEN 1
            ELSE 0
        END AS merda,

        CASE
            WHEN p.vencedor = 'A' AND p.placar2 = 0 AND p.jogador1_id = j.id THEN 1
            WHEN p.vencedor = 'B' AND p.placar1 = 0 AND p.jogador2_id = j.id THEN 1
            ELSE 0
        END AS merito
    FROM vw_partida_sinuca_com_vencedor p
    JOIN jogador j1 ON j1.id = p.jogador1_id
    JOIN jogador j2 ON j2.id = p.jogador2_id
    JOIN jogador j ON j.id IN (p.jogador1_id, p.jogador2_id)
)
SELECT 
    id_rival,
    nome_rival,
    COUNT(*) / 2 AS partidas,
    SUM(empate) / 2 AS empates,
    STRING_AGG(vitoria::text, ',' ORDER BY jogador_id) AS vitorias,
    STRING_AGG(placar_pro::text, ',' ORDER BY jogador_id) AS placar_vitoria,
    STRING_AGG(placar_contra::text, ',' ORDER BY jogador_id) AS placar_derrota,
    STRING_AGG(merda::text, ',' ORDER BY jogador_id) AS merdas,
    STRING_AGG(merito::text, ',' ORDER BY jogador_id) AS meritos
FROM confrontos
GROUP BY id_rival, nome_rival
ORDER BY partidas DESC;










--30/05/25



DROP VIEW IF EXISTS public.vw_jogador_estatistica;
CREATE OR REPLACE VIEW public.vw_jogador_estatistica AS
SELECT 
    j.id,
    j.nome,
    count(p.id) AS partidas,
    
    -- VITÓRIAS
    sum(
        CASE
            WHEN (j.id = p.jogador1_id OR j.id = p.jogador2_id) AND p.dupla_vencedora = 'A' THEN 1
            WHEN (j.id = p.jogador3_id OR j.id = p.jogador4_id) AND p.dupla_vencedora = 'B' THEN 1
            ELSE 0
        END
    ) AS vitorias,

    -- DERROTAS
    sum(
        CASE
            WHEN (j.id = p.jogador1_id OR j.id = p.jogador2_id) AND p.dupla_vencedora = 'B' THEN 1
            WHEN (j.id = p.jogador3_id OR j.id = p.jogador4_id) AND p.dupla_vencedora = 'A' THEN 1
            ELSE 0
        END
    ) AS derrotas,

    -- EMPATES
    sum(
        CASE
            WHEN (j.id = p.jogador1_id OR j.id = p.jogador2_id OR j.id = p.jogador3_id OR j.id = p.jogador4_id)
                AND p.dupla_vencedora = 'AB' THEN 1
            ELSE 0
        END
    ) AS empates,

    -- MERDA
    sum(
        CASE
            WHEN p.jogadorbct IS NOT NULL AND (
                (p.jogadorbct = 1 AND j.id = p.jogador1_id) OR 
                (p.jogadorbct = 2 AND j.id = p.jogador2_id) OR 
                (p.jogadorbct = 3 AND j.id = p.jogador3_id) OR 
                (p.jogadorbct = 4 AND j.id = p.jogador4_id)
            ) THEN 1
            ELSE 0
        END
    ) AS merda,

    -- MÉRITO
    sum(
        CASE
            WHEN (
                ((j.id = p.jogador1_id OR j.id = p.jogador2_id) AND p.dupla_vencedora = 'A') OR 
                ((j.id = p.jogador3_id OR j.id = p.jogador4_id) AND p.dupla_vencedora = 'B')
            )
            AND (p.jogadas ILIKE '%C%' OR p.jogadas ILIKE '%L%')
            THEN 1
            ELSE 0
        END
    ) AS merito,

    -- LAELO
    sum(
        CASE
            WHEN (
                ((j.id = p.jogador1_id OR j.id = p.jogador2_id) AND p.dupla_vencedora = 'A') OR 
                ((j.id = p.jogador3_id OR j.id = p.jogador4_id) AND p.dupla_vencedora = 'B')
            )
            AND p.jogadas ILIKE '%L%'
            THEN 1
            ELSE 0
        END
    ) AS laelo,

    -- CRUZADA
    sum(
        CASE
            WHEN (
                ((j.id = p.jogador1_id OR j.id = p.jogador2_id) AND p.dupla_vencedora = 'A') OR 
                ((j.id = p.jogador3_id OR j.id = p.jogador4_id) AND p.dupla_vencedora = 'B')
            )
            AND p.jogadas ILIKE '%C%'
            THEN 1
            ELSE 0
        END
    ) AS cruzada,

    -- PLACAR DAS VITÓRIAS
    sum(
        CASE
            WHEN (j.id = p.jogador1_id OR j.id = p.jogador2_id) AND p.dupla_vencedora = 'A' THEN p.placar1
            WHEN (j.id = p.jogador3_id OR j.id = p.jogador4_id) AND p.dupla_vencedora = 'B' THEN p.placar2
            ELSE 0
        END
    ) AS placar_vitoria,

    -- PLACAR DAS DERROTAS
    sum(
        CASE
            WHEN (j.id = p.jogador1_id OR j.id = p.jogador2_id) AND p.dupla_vencedora = 'B' THEN p.placar1
            WHEN (j.id = p.jogador3_id OR j.id = p.jogador4_id) AND p.dupla_vencedora = 'A' THEN p.placar2
            ELSE 0
        END
    ) AS placar_derrota

FROM 
    jogador j
LEFT JOIN 
    vw_partida_com_vencedor p 
    ON j.id IN (p.jogador1_id, p.jogador2_id, p.jogador3_id, p.jogador4_id)
GROUP BY 
    j.id, j.nome
ORDER BY 
    count(p.id) DESC;



CREATE OR REPLACE VIEW public.vw_dupla_estatistica AS
SELECT
    CASE
        WHEN j1.nome < j2.nome THEN j1.id || ',' || j2.id
        ELSE j2.id || ',' || j1.id
    END AS id,
    CASE
        WHEN j1.nome < j2.nome THEN j1.nome || ',' || j2.nome
        ELSE j2.nome || ',' || j1.nome
    END AS nome,
    count(*) AS partidas,
    sum(
        CASE
            WHEN (p.jogador1_id = j1.id AND p.jogador2_id = j2.id AND p.dupla_vencedora = 'A')
              OR (p.jogador2_id = j1.id AND p.jogador1_id = j2.id AND p.dupla_vencedora = 'A')
              OR (p.jogador3_id = j1.id AND p.jogador4_id = j2.id AND p.dupla_vencedora = 'B')
              OR (p.jogador4_id = j1.id AND p.jogador3_id = j2.id AND p.dupla_vencedora = 'B')
            THEN 1 ELSE 0
        END
    ) AS vitorias,
    sum(
        CASE
            WHEN (p.jogador1_id = j1.id AND p.jogador2_id = j2.id AND p.dupla_vencedora = 'B')
              OR (p.jogador2_id = j1.id AND p.jogador1_id = j2.id AND p.dupla_vencedora = 'B')
              OR (p.jogador3_id = j1.id AND p.jogador4_id = j2.id AND p.dupla_vencedora = 'A')
              OR (p.jogador4_id = j1.id AND p.jogador3_id = j2.id AND p.dupla_vencedora = 'A')
            THEN 1 ELSE 0
        END
    ) AS derrotas,
    sum(
        CASE
            WHEN (
                (p.jogador1_id = j1.id AND p.jogador2_id = j2.id)
              OR (p.jogador2_id = j1.id AND p.jogador1_id = j2.id)
              OR (p.jogador3_id = j1.id AND p.jogador4_id = j2.id)
              OR (p.jogador4_id = j1.id AND p.jogador3_id = j2.id)
            ) AND p.dupla_vencedora = 'AB'
            THEN 1 ELSE 0
        END
    ) AS empates,
    sum(
        CASE
            WHEN (
                (p.jogador1_id = j1.id AND p.jogador2_id = j2.id AND p.dupla_vencedora = 'A')
              OR (p.jogador2_id = j1.id AND p.jogador1_id = j2.id AND p.dupla_vencedora = 'A')
              OR (p.jogador3_id = j1.id AND p.jogador4_id = j2.id AND p.dupla_vencedora = 'B')
              OR (p.jogador4_id = j1.id AND p.jogador3_id = j2.id AND p.dupla_vencedora = 'B')
            ) AND (p.jogadas ILIKE '%C%' OR p.jogadas ILIKE '%L%')
            THEN 1 ELSE 0
        END
    ) AS merito,
    sum(
        CASE
            WHEN (
                (p.jogador1_id = j1.id AND p.jogador2_id = j2.id AND p.dupla_vencedora = 'A')
              OR (p.jogador2_id = j1.id AND p.jogador1_id = j2.id AND p.dupla_vencedora = 'A')
              OR (p.jogador3_id = j1.id AND p.jogador4_id = j2.id AND p.dupla_vencedora = 'B')
              OR (p.jogador4_id = j1.id AND p.jogador3_id = j2.id AND p.dupla_vencedora = 'B')
            ) AND p.jogadas ILIKE '%L%'
            THEN 1 ELSE 0
        END
    ) AS laelo,
    sum(
        CASE
            WHEN (
                (p.jogador1_id = j1.id AND p.jogador2_id = j2.id AND p.dupla_vencedora = 'A')
              OR (p.jogador2_id = j1.id AND p.jogador1_id = j2.id AND p.dupla_vencedora = 'A')
              OR (p.jogador3_id = j1.id AND p.jogador4_id = j2.id AND p.dupla_vencedora = 'B')
              OR (p.jogador4_id = j1.id AND p.jogador3_id = j2.id AND p.dupla_vencedora = 'B')
            ) AND p.jogadas ILIKE '%C%'
            THEN 1 ELSE 0
        END
    ) AS cruzada,
    -- NOVO: placar_vitoria
    sum(
        CASE
            WHEN (p.jogador1_id = j1.id AND p.jogador2_id = j2.id AND p.dupla_vencedora = 'A')
              OR (p.jogador2_id = j1.id AND p.jogador1_id = j2.id AND p.dupla_vencedora = 'A')
            THEN p.placar1
            WHEN (p.jogador3_id = j1.id AND p.jogador4_id = j2.id AND p.dupla_vencedora = 'B')
              OR (p.jogador4_id = j1.id AND p.jogador3_id = j2.id AND p.dupla_vencedora = 'B')
            THEN p.placar2
            ELSE 0
        END
    ) AS placar_vitoria,
    -- NOVO: placar_derrota
    sum(
        CASE
            WHEN (p.jogador1_id = j1.id AND p.jogador2_id = j2.id AND p.dupla_vencedora = 'B')
              OR (p.jogador2_id = j1.id AND p.jogador1_id = j2.id AND p.dupla_vencedora = 'B')
            THEN p.placar1
            WHEN (p.jogador3_id = j1.id AND p.jogador4_id = j2.id AND p.dupla_vencedora = 'A')
              OR (p.jogador4_id = j1.id AND p.jogador3_id = j2.id AND p.dupla_vencedora = 'A')
            THEN p.placar2
            ELSE 0
        END
    ) AS placar_derrota
FROM vw_partida_com_vencedor p
JOIN jogador j1 ON j1.id IN (p.jogador1_id, p.jogador2_id, p.jogador3_id, p.jogador4_id)
JOIN jogador j2 ON j2.id IN (p.jogador1_id, p.jogador2_id, p.jogador3_id, p.jogador4_id) AND j1.id < j2.id
WHERE
    (p.jogador1_id = j1.id AND p.jogador2_id = j2.id)
 OR (p.jogador2_id = j1.id AND p.jogador1_id = j2.id)
 OR (p.jogador3_id = j1.id AND p.jogador4_id = j2.id)
 OR (p.jogador4_id = j1.id AND p.jogador3_id = j2.id)
GROUP BY
    CASE
        WHEN j1.nome < j2.nome THEN j1.id || ',' || j2.id
        ELSE j2.id || ',' || j1.id
    END,
    CASE
        WHEN j1.nome < j2.nome THEN j1.nome || ',' || j2.nome
        ELSE j2.nome || ',' || j1.nome
    END
ORDER BY count(*) DESC;


























--27/05/25 11:45

--ALTER TABLE partida ADD COLUMN jogadas TEXT;


--28/05/25 10:42

CREATE OR REPLACE VIEW vw_partida_com_vencedor AS
SELECT *,
    CASE
        -- 1. Se houver valor em jogadorbct, usamos isso para definir o perdedor
        WHEN jogadorbct IS NOT NULL THEN
            CASE 
                WHEN jogadorbct IN (1, 2) THEN 'B'  -- jogador da dupla A perdeu → dupla B venceu
                WHEN jogadorbct IN (3, 4) THEN 'A'  -- jogador da dupla B perdeu → dupla A venceu
				WHEN placar1 > placar2 THEN 'A'
                WHEN placar2 > placar1 THEN 'B'
                ELSE 'AB'  -- empate
            END
        -- 2. Se jogadorbct for NULL, usamos os placares
        ELSE
            CASE 
                WHEN placar1 > placar2 THEN 'A'
                WHEN placar2 > placar1 THEN 'B'
                ELSE 'AB'  -- empate
            END
    END AS dupla_vencedora
FROM partida;


CREATE OR REPLACE VIEW vw_jogador_estatistica AS
SELECT 
    j.id,
    j.nome,
    COUNT(p.id) AS partidas,

    -- Vitórias
    SUM(
        CASE 
            WHEN (j.id = p.jogador1_id OR j.id = p.jogador2_id) AND p.dupla_vencedora = 'A' THEN 1
            WHEN (j.id = p.jogador3_id OR j.id = p.jogador4_id) AND p.dupla_vencedora = 'B' THEN 1
            ELSE 0
        END
    ) AS vitorias,

    -- Derrotas
    SUM(
        CASE 
            WHEN (j.id = p.jogador1_id OR j.id = p.jogador2_id) AND p.dupla_vencedora = 'B' THEN 1
            WHEN (j.id = p.jogador3_id OR j.id = p.jogador4_id) AND p.dupla_vencedora = 'A' THEN 1
            ELSE 0
        END
    ) AS derrotas,

    -- Empates
    SUM(
        CASE 
            WHEN (j.id IN (p.jogador1_id, p.jogador2_id, p.jogador3_id, p.jogador4_id)) AND p.dupla_vencedora = 'AB' THEN 1
            ELSE 0
        END
    ) AS empates,

    -- Merda
    SUM(
        CASE
            WHEN p.jogadorbct IS NOT NULL AND
                (
                    (p.jogadorbct = 1 AND j.id = p.jogador1_id) OR
                    (p.jogadorbct = 2 AND j.id = p.jogador2_id) OR
                    (p.jogadorbct = 3 AND j.id = p.jogador3_id) OR
                    (p.jogadorbct = 4 AND j.id = p.jogador4_id)
                )
            THEN 1
            ELSE 0
        END
    ) AS merda,

    -- Mérito
    SUM(
        CASE
            WHEN
                (
                    ((j.id = p.jogador1_id OR j.id = p.jogador2_id) AND p.dupla_vencedora = 'A') OR
                    ((j.id = p.jogador3_id OR j.id = p.jogador4_id) AND p.dupla_vencedora = 'B')
                )
                AND (p.jogadas ILIKE '%C%' OR p.jogadas ILIKE '%L%')
            THEN 1
            ELSE 0
        END
    ) AS merito,

    -- Laelo
    SUM(
        CASE
            WHEN
                (
                    ((j.id = p.jogador1_id OR j.id = p.jogador2_id) AND p.dupla_vencedora = 'A') OR
                    ((j.id = p.jogador3_id OR j.id = p.jogador4_id) AND p.dupla_vencedora = 'B')
                )
                AND p.jogadas ILIKE '%L%'
            THEN 1
            ELSE 0
        END
    ) AS laelo,

    -- Cruzada
    SUM(
        CASE
            WHEN
                (
                    ((j.id = p.jogador1_id OR j.id = p.jogador2_id) AND p.dupla_vencedora = 'A') OR
                    ((j.id = p.jogador3_id OR j.id = p.jogador4_id) AND p.dupla_vencedora = 'B')
                )
                AND p.jogadas ILIKE '%C%'
            THEN 1
            ELSE 0
        END
    ) AS cruzada

FROM jogador j
LEFT JOIN vw_partida_com_vencedor p 
    ON j.id IN (p.jogador1_id, p.jogador2_id, p.jogador3_id, p.jogador4_id)
GROUP BY j.id, j.nome
ORDER BY partidas DESC;


CREATE OR REPLACE VIEW vw_dupla_estatistica AS
SELECT
    -- Dupla ID ordenado por nome (menor nome primeiro)
    CASE
        WHEN j1.nome < j2.nome THEN j1.id || ',' || j2.id
        ELSE j2.id || ',' || j1.id
    END AS id,

    -- Nomes ordenados alfabeticamente
    CASE
        WHEN j1.nome < j2.nome THEN j1.nome || ',' || j2.nome
        ELSE j2.nome || ',' || j1.nome
    END AS nome,

    COUNT(*) AS partidas,

    -- Vitórias
    SUM(
        CASE 
            WHEN (p.jogador1_id = j1.id AND p.jogador2_id = j2.id AND p.dupla_vencedora = 'A') OR
                 (p.jogador2_id = j1.id AND p.jogador1_id = j2.id AND p.dupla_vencedora = 'A') OR
                 (p.jogador3_id = j1.id AND p.jogador4_id = j2.id AND p.dupla_vencedora = 'B') OR
                 (p.jogador4_id = j1.id AND p.jogador3_id = j2.id AND p.dupla_vencedora = 'B')
            THEN 1 ELSE 0
        END
    ) AS vitorias,

    -- Derrotas
    SUM(
        CASE 
            WHEN (p.jogador1_id = j1.id AND p.jogador2_id = j2.id AND p.dupla_vencedora = 'B') OR
                 (p.jogador2_id = j1.id AND p.jogador1_id = j2.id AND p.dupla_vencedora = 'B') OR
                 (p.jogador3_id = j1.id AND p.jogador4_id = j2.id AND p.dupla_vencedora = 'A') OR
                 (p.jogador4_id = j1.id AND p.jogador3_id = j2.id AND p.dupla_vencedora = 'A')
            THEN 1 ELSE 0
        END
    ) AS derrotas,

    -- Empates
    SUM(
        CASE 
            WHEN ((p.jogador1_id = j1.id AND p.jogador2_id = j2.id) OR
                  (p.jogador2_id = j1.id AND p.jogador1_id = j2.id) OR
                  (p.jogador3_id = j1.id AND p.jogador4_id = j2.id) OR
                  (p.jogador4_id = j1.id AND p.jogador3_id = j2.id))
                 AND p.dupla_vencedora = 'AB'
            THEN 1 ELSE 0
        END
    ) AS empates,

    -- Mérito (vitória + C ou L na jogada)
    SUM(
        CASE
            WHEN (
                ((p.jogador1_id = j1.id AND p.jogador2_id = j2.id AND p.dupla_vencedora = 'A') OR
                 (p.jogador2_id = j1.id AND p.jogador1_id = j2.id AND p.dupla_vencedora = 'A') OR
                 (p.jogador3_id = j1.id AND p.jogador4_id = j2.id AND p.dupla_vencedora = 'B') OR
                 (p.jogador4_id = j1.id AND p.jogador3_id = j2.id AND p.dupla_vencedora = 'B'))
                AND (p.jogadas ILIKE '%C%' OR p.jogadas ILIKE '%L%')
            )
            THEN 1 ELSE 0
        END
    ) AS merito,

    -- Laelo (vitória + L)
    SUM(
        CASE
            WHEN (
                ((p.jogador1_id = j1.id AND p.jogador2_id = j2.id AND p.dupla_vencedora = 'A') OR
                 (p.jogador2_id = j1.id AND p.jogador1_id = j2.id AND p.dupla_vencedora = 'A') OR
                 (p.jogador3_id = j1.id AND p.jogador4_id = j2.id AND p.dupla_vencedora = 'B') OR
                 (p.jogador4_id = j1.id AND p.jogador3_id = j2.id AND p.dupla_vencedora = 'B'))
                AND p.jogadas ILIKE '%L%'
            )
            THEN 1 ELSE 0
        END
    ) AS laelo,

    -- Cruzada (vitória + C)
    SUM(
        CASE
            WHEN (
                ((p.jogador1_id = j1.id AND p.jogador2_id = j2.id AND p.dupla_vencedora = 'A') OR
                 (p.jogador2_id = j1.id AND p.jogador1_id = j2.id AND p.dupla_vencedora = 'A') OR
                 (p.jogador3_id = j1.id AND p.jogador4_id = j2.id AND p.dupla_vencedora = 'B') OR
                 (p.jogador4_id = j1.id AND p.jogador3_id = j2.id AND p.dupla_vencedora = 'B'))
                AND p.jogadas ILIKE '%C%'
            )
            THEN 1 ELSE 0
        END
    ) AS cruzada

FROM vw_partida_com_vencedor p

-- Unindo com jogadores da dupla
JOIN jogador j1 ON j1.id IN (p.jogador1_id, p.jogador2_id, p.jogador3_id, p.jogador4_id)
JOIN jogador j2 ON j2.id IN (p.jogador1_id, p.jogador2_id, p.jogador3_id, p.jogador4_id)
    AND j1.id < j2.id  -- Evita pares duplicados e autojoins

-- Garantir que são da mesma dupla
WHERE 
    ( (p.jogador1_id = j1.id AND p.jogador2_id = j2.id) OR
      (p.jogador2_id = j1.id AND p.jogador1_id = j2.id) OR
      (p.jogador3_id = j1.id AND p.jogador4_id = j2.id) OR
      (p.jogador4_id = j1.id AND p.jogador3_id = j2.id) )

GROUP BY
    CASE
        WHEN j1.nome < j2.nome THEN j1.id || ',' || j2.id
        ELSE j2.id || ',' || j1.id
    END,
    CASE
        WHEN j1.nome < j2.nome THEN j1.nome || ',' || j2.nome
        ELSE j2.nome || ',' || j1.nome
    END
ORDER BY partidas DESC;
